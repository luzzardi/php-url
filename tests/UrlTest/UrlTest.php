<?php
/**
 * Created by PhpStorm.
 * User: aluzzardi
 * Date: 18/05/16
 * Time: 09:31
 */

namespace UrlTest;

use Url\Url;

class UrlTest extends \PHPUnit_Framework_TestCase

{
    protected $query = [
        'name' => 'Jon Snow',
        'house' => 'Stark'
    ];

    protected $queryString;

    protected $url;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->queryString = http_build_query($this->query);
        $this->url = 'http://www.example.com/?' . $this->queryString;
    }

    public function testHttpQueryBuilder()
    {
        $url = new Url();
        $this->assertEquals($this->queryString, $url->httpQueryBuilder($this->query));
    }

    public function testBase64Encode()
    {
        $queryStringEncoded = base64_encode($this->queryString);
        $url = new Url();
        $this->assertEquals($queryStringEncoded, $url->base64Encode($this->queryString));
    }

    public function testBase64Decode()
    {
        $queryStringEncoded = base64_encode($this->queryString);
        $url = new Url();
        $this->assertEquals($this->queryString, $url->base64Decode($queryStringEncoded));
    }

    public function testGetHeader()
    {
        $testUrl = 'http://google.com/';
        $url = new Url();
        $this->assertTrue(!empty($url->getHeaders($testUrl)));
    }

    public function testGetMetaTags()
    {
        $testUrl = 'http://microsoft.com/';
        $url = new Url();
        $this->assertArrayHasKey('searchtitle', $url->getMetaTags($testUrl));
    }

    public function testParseUrl()
    {
        $url = new Url();
        $this->assertArrayHasKey('query', $url->parseUrl($this->url));
    }

    public function testRawUrlEncode()
    {
        $url = new Url();
        $rawEncode = rawurlencode($this->url);
        $this->assertEquals($rawEncode, $url->rawUrlEncode($this->url));
    }

}